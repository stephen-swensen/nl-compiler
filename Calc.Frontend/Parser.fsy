%{
//note, the module name of the parser is given by the --module flag (set in project)
open Swensen.Calc.Ast

%}

%token <int> INTEGER
%token <float> RATIONAL
%token PLUS MINUS TIMES DIV POW FACT
%token OPEN CLOSE
%token EOF

%left PLUS MINUS
%left TIMES DIV
%right POW
%nonassoc UMINUS
%nonassoc FACT

%start start
%type <exp> start
%type <value> value

%%

start:
    | exp EOF				 { $1 }

value:
	| INTEGER				 { Integer($1) }
	| RATIONAL				 { Rational($1) }

exp: 
    | exp PLUS  exp			 { Plus($1, $3, ref null)  }
    | exp MINUS exp			 { Minus($1, $3, ref null) }
	| exp TIMES exp			 { Times($1, $3, ref null) }
	| exp DIV exp			 { Div($1, $3, ref null) }
	| exp POW exp			 { Pow($1, $3, ref null) }
	| exp FACT				 { Fact($1) }
	| MINUS exp %prec UMINUS { UMinus($2, ref null) }
	| value					 { Value($1) }
	| OPEN exp CLOSE		 { $2 }